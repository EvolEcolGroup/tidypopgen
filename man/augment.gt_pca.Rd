% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt_pca_tidiers.R
\name{augment.gt_pca}
\alias{augment.gt_pca}
\title{Augment data with information from a gt_pca object}
\usage{
\method{augment}{gt_pca}(x, data = NULL, drop_genotypes = TRUE, ...)
}
\arguments{
\item{x}{A \code{gt_pca} object returned by \code{\link[=gt_pca]{gt_pca()}}.}

\item{data}{the \code{gen_tibble} used to run \code{\link[=gt_pca]{gt_pca()}}.}

\item{drop_genotypes}{boolean on whether genotypes should be droppved from
the tibble being returned by the function. As the \code{genotypes} column has
a massive memory footprint, it is often better to work on an augmented
tibble form which they have been dropped. Defaults to TRUE.}

\item{...}{Not used. Needed to match generic signature only.}
}
\value{
A \link[tibble:tibble]{tibble::tibble} (or a \link{gen_tibble} if \code{drop_genotypes} is set
to 'FALSE']containing the original data along with
additional columns containing each observation's projection into
PCA space.
}
\description{
Augment for \code{gt_pca} accepts a model object and a dataset and adds
scores to each
observation in the dataset. Scores for each component are stored in a
separate column, which is given name with the pattern ".fittedPC1",
".fittedPC2", etc. For consistency with \link[broom:augment.prcomp]{broom::augment.prcomp}, a column
".rownames" is also returned; it is a copy of 'id', but it ensures that
any scripts written for data augmented with \link[broom:augment.prcomp]{broom::augment.prcomp} will
work out of the box (this is especially helpful when adapting plotting scripts).
}
\seealso{
\code{\link[=gt_pca]{gt_pca()}} \link{gt_pca_tidiers}
}
